local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "GBS TOH",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Premium USER??? wwwwww",
   LoadingSubtitle = "by j1w0o",
   Theme = "Amethyst", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("홈", 4483362458) -- Title, Image

local Section = Tab:CreateSection("기어")

local Button = Tab:CreateButton({
   Name = "Inf jump tool",
   Callback = function()
   print("start script")
    local player = game.Players.LocalPlayer
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local jumpTool = replicatedStorage:WaitForChild("Gear"):WaitForChild("jump")  -- "Gear" 폴더 내 "jump" 아이템

    if jumpTool then
        local clonedTool = jumpTool:Clone()  -- 아이템 복제
        clonedTool.Parent = player.Backpack  -- 플레이어의 백팩에 아이템 추가
        print("Jump item given to " .. player.Name)
    else
        print("Jump item not found in ReplicatedStorage.Gear.")
    end
       end,
    })

local Button2 = Tab:CreateButton({
   Name = "Fusion Coil",
   Callback = function()
   print("start script")
    local player = game.Players.LocalPlayer
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local fTool = replicatedStorage:WaitForChild("Gear"):WaitForChild("fusion")  -- "Gear" 폴더 내 "jump" 아이템

    if fTool then
        local clonedTool = fTool:Clone()  -- 아이템 복제
        clonedTool.Parent = player.Backpack  -- 플레이어의 백팩에 아이템 추가
        print("Jump item given to " .. player.Name)
    else
        print("Jump item not found in ReplicatedStorage.Gear.")
    end
       end,
    })

local Button2 = Tab:CreateButton({
   Name = "Get All Tool",
   Callback = function()
   local player = game.Players.LocalPlayer
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local gearFolder = replicatedStorage:WaitForChild("Gear")  -- "Gear" 폴더

    -- Gear 폴더 안의 모든 아이템(툴)을 반복하며 지급
    for _, item in ipairs(gearFolder:GetChildren()) do
        if item:IsA("Tool") then  -- 아이템이 Tool인지 확인
            local clonedTool = item:Clone()  -- 툴을 복제
            clonedTool.Parent = player.Backpack  -- 플레이어의 백팩에 툴 추가
            print("Given tool: " .. item.Name)  -- 지급한 툴 이름 출력
        end
    end
       end,
    })
